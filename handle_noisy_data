from sklearn.cluster import SpectralClustering
import numpy as np
from sklearn.cluster import KMeans
import time
import matplotlib.pyplot as plt

def load_data(data_length):
    data = 4 * np.random.randn(data_length, 2)
    print('data length is : ', data.shape[0])
    return data

def spectral_time(data):
    start = time.time()
    clustering = SpectralClustering(n_clusters=2, assign_labels="discretize",
                                    random_state=0).fit(data)
    end = time.time()
    time_length = end - start
    return time_length

def k_means_time(data):
    start = time.time()
    clustering = KMeans(n_clusters=2, random_state=1).fit(data)
    end = time.time()
    time_length = end - start
    return time_length


if __name__ =='__main__':
    n_interation = 10
    Spec_Time = np.zeros((10))
    K_Time = np.zeros((10))
    for i in range(10):
        data = load_data(data_length=(i+1)*500)
        spectral_t = spectral_time(data)
        Spec_Time[i] = spectral_t
        kmeans_time = k_means_time(data)
        K_Time[i] = kmeans_time
        print('interation is :', i)

    plt.figure()
    x = np.arange(n_interation)
    plt.plot(x, Spec_Time, 'r^', linewidth = 3, markersize = 5)
    plt.plot(x, K_Time, 'bo', linewidth = 3, markersize = 5)
    plt.plot(x, Spec_Time, 'r', linewidth = 3)
    plt.plot(x, K_Time, 'b', linewidth = 3)
    plt.xlabel('data amount')
    plt.ylabel('Cost Time')
    plt.legend(['Spectral Clustering', 'Kmeans Clustering'], loc = 'best')
    plt.show()






    # visualize_data(data, kmeans_labels)
